<?php

namespace MailPoetDoctrineProxies\__CG__\MailPoet\Entities;

if (!defined('ABSPATH')) exit;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class SubscriberEntity extends \MailPoet\Entities\SubscriberEntity implements \MailPoetVendor\Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'wp_user_id', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'is_woocommerce_user', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'first_name', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'last_name', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'email', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'status', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'subscribed_ip', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'confirmed_ip', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'confirmed_at', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'last_subscribed_at', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'unconfirmed_data', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'source', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'count_confirmations', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'unsubscribe_token', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'link_token', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'id', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'created_at', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'updated_at', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'deleted_at'];
        }

        return ['__isInitialized__', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'wp_user_id', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'is_woocommerce_user', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'first_name', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'last_name', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'email', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'status', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'subscribed_ip', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'confirmed_ip', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'confirmed_at', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'last_subscribed_at', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'unconfirmed_data', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'source', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'count_confirmations', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'unsubscribe_token', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'link_token', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'id', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'created_at', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'updated_at', '' . "\0" . 'MailPoet\\Entities\\SubscriberEntity' . "\0" . 'deleted_at'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (SubscriberEntity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getWpUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWpUserId', []);

        return parent::getWpUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setWpUserId($wp_user_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWpUserId', [$wp_user_id]);

        return parent::setWpUserId($wp_user_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsWoocommerceUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsWoocommerceUser', []);

        return parent::getIsWoocommerceUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsWoocommerceUser($is_woocommerce_user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsWoocommerceUser', [$is_woocommerce_user]);

        return parent::setIsWoocommerceUser($is_woocommerce_user);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($first_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$first_name]);

        return parent::setFirstName($first_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($last_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$last_name]);

        return parent::setLastName($last_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribedIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribedIp', []);

        return parent::getSubscribedIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscribedIp($subscribed_ip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscribedIp', [$subscribed_ip]);

        return parent::setSubscribedIp($subscribed_ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmedIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmedIp', []);

        return parent::getConfirmedIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmedIp($confirmed_ip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmedIp', [$confirmed_ip]);

        return parent::setConfirmedIp($confirmed_ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmedAt', []);

        return parent::getConfirmedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmedAt($confirmed_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmedAt', [$confirmed_at]);

        return parent::setConfirmedAt($confirmed_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastSubscribedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastSubscribedAt', []);

        return parent::getLastSubscribedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastSubscribedAt($last_subscribed_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastSubscribedAt', [$last_subscribed_at]);

        return parent::setLastSubscribedAt($last_subscribed_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnconfirmedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnconfirmedData', []);

        return parent::getUnconfirmedData();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnconfirmedData($unconfirmed_data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnconfirmedData', [$unconfirmed_data]);

        return parent::setUnconfirmedData($unconfirmed_data);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource($source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmationsCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmationsCount', []);

        return parent::getConfirmationsCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmationsCount($count_confirmations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmationsCount', [$count_confirmations]);

        return parent::setConfirmationsCount($count_confirmations);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsubscribeToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsubscribeToken', []);

        return parent::getUnsubscribeToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribeToken($unsubscribe_token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribeToken', [$unsubscribe_token]);

        return parent::setUnsubscribeToken($unsubscribe_token);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkToken', []);

        return parent::getLinkToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setLinkToken($link_token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLinkToken', [$link_token]);

        return parent::setLinkToken($link_token);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $created_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTimeInterface $updated_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated_at]);

        return parent::setUpdatedAt($updated_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', []);

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt($deleted_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', [$deleted_at]);

        return parent::setDeletedAt($deleted_at);
    }

}
